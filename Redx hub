-- Create the ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "Redx_clc562"

-- Create the main frame
local MainFrame = Instance.new("Frame")
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0, 400, 0, 200)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.BorderSizePixel = 0

-- Add UICorner to MainFrame for rounded corners
local UICorner = Instance.new("UICorner")
UICorner.Parent = MainFrame
UICorner.CornerRadius = UDim.new(0, 10)

-- Create the title
local Title = Instance.new("TextLabel")
Title.Parent = MainFrame
Title.Size = UDim2.new(0, 400, 0, 50)
Title.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
Title.Text = "Redx_clc562 hub"
Title.TextColor3 = Color3.fromRGB(0, 0, 0)
Title.Font = Enum.Font.SourceSans
Title.TextSize = 24
Title.BorderSizePixel = 0

-- Add UICorner to Title for rounded corners
local TitleCorner = Instance.new("UICorner")
TitleCorner.Parent = Title
TitleCorner.CornerRadius = UDim.new(0, 10)

-- Create the close button
local CloseButton = Instance.new("TextButton")
CloseButton.Parent = MainFrame
CloseButton.Size = UDim2.new(0, 50, 0, 50)
CloseButton.Position = UDim2.new(0, 350, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(232, 17, 35)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSans
CloseButton.TextSize = 24
CloseButton.BorderSizePixel = 0

-- Add UICorner to CloseButton for rounded corners
local CloseButtonCorner = Instance.new("UICorner")
CloseButtonCorner.Parent = CloseButton
CloseButtonCorner.CornerRadius = UDim.new(0, 10)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Create a function to generate buttons
local function createButton(name, position, scriptUrl)
    local Button = Instance.new("TextButton")
    Button.Parent = MainFrame
    Button.Size = UDim2.new(0, 180, 0, 50)
    Button.Position = position
    Button.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    Button.Text = name
    Button.TextColor3 = Color3.fromRGB(0, 0, 0)
    Button.Font = Enum.Font.SourceSans
    Button.TextSize = 24
    Button.BorderSizePixel = 0

    -- Add UICorner to Button for rounded corners
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.Parent = Button
    ButtonCorner.CornerRadius = UDim.new(0, 10)

    Button.MouseButton1Click:Connect(function()
        loadstring(game:HttpGet(scriptUrl))()
    end)
end

-- Create the buttons with the specified functionalities
createButton("break in", UDim2.new(0, 10, 0, 60), "https://pastebin.com/raw/JCWALTth")
createButton("break in 2", UDim2.new(0, 200, 0, 60), "https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/BreakIn2.lua")
createButton("infy", UDim2.new(0, 10, 0, 120), "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source")
createButton("mobile shiftlock", UDim2.new(0, 200, 0, 120), "https://pastefy.app/uPPNGgf2/raw")

-- Make the MainFrame draggable
local function makeDraggable(frame)
    local dragToggle = nil
    local dragInput = nil
    local dragStart = nil
    local startPos = nil

    local function updateInput(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end
    end)
end

makeDraggable(MainFrame)

